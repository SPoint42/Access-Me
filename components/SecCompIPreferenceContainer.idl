/*
Copyright 2007 Security Compass

This file is part of Access Me.

Access Meis free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Access Meis distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Access Me.  If not, see <http://www.gnu.org/licenses/>.

If you have any questions regarding Access Meplease contact
tools@securitycompass.com
*/

#include "nsISupports.idl"
#include "nsIFile.idl"
#include "nsIWritablePropertyBag2.idl"
#include "nsIVariant.idl"

/**
 * A generic container for more complex prefernces (generally lists)
 * Note that save()'s use is deprecated and all operations which change the
 * state of the container should save() automatically before returning.
 */
[scriptable, uuid(5b4ef7bb-b996-4310-9a12-842f454313e3)]
interface SecCompIPreferenceContainer: nsISupports {
    /**
     * Get the preferences contained
     * @returns an array of preferences
     */
    nsIVariant getContents();
    
    /**
     * adds a prferences string with a signature (often optional)
     * @param str the pref string
     * @param sig the signature
     * @returns true on success
     */
    boolean addString(in string str, in string sig);
    
    /**
     * Save the preferences to the system
     * @deprecated
     * @returns true on success
     */
    boolean save();
    
    /**
     * swap two preferences at two index
     * @returns true on success
     */
    boolean swap(in unsigned long index1, in unsigned long index2);
    
    /**
     * exports the preferences contained to a file
     * @returns true on success
     */
    boolean exportToFile(in nsIFile file);
    
    /**
     * imports prefs from a file
     * @returns true on success
     */
    boolean importFromFile(in nsIFile file);
    
    /**
     * removes a preference from the container
     */
    boolean remove(in long index);
};

